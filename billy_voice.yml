esphome:
  name: esphome-web-0d1ae8
  friendly_name: mic-test
  min_version: 2025.5.0
  name_add_mac_suffix: false


esp32:
  board: esp32dev
  framework:
    type: arduino
    #version: latest
    # type: esp-idf
    # version: latest
  

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

wifi:
  ssid: !secret
  password: !secret

# i2s_audio:
#   - id: i2s_in
#     i2s_lrclk_pin: GPIO15 #INMP441 WS | PCM5102 LCK 
#     i2s_bclk_pin: GPIO02 # INMP441 SCK | PCM5102 BCK
#     #use_apll: true

i2s_audio:
  - id: bus0
    i2s_lrclk_pin: GPIO25   # WS/LRCLK
    i2s_bclk_pin:  GPIO26   # SCK/BCLK
    #use_apll: true          # more stable clocks on many boards

microphone:
  - platform: i2s_audio
    id: mic
    i2s_audio_id: bus0
    adc_type: external
    i2s_din_pin: GPIO33
    channel: left           # <-- set to left if L/R pad is GND, right if L/R is 3V3
    #sample_rate: 16000      # many INMP441 clones like 44.1k/48k
    #bits_per_sample: 32bit     # <-- no "bit"

# sensor:
#   - platform: sound_level
#     microphone: mic
#     passive: false
#     measurement_duration: 250ms
#     rms:
#       name: "Mic RMS dB"
#     peak:
#       name: "Mic Peak dB"

voice_assistant:
  microphone: mic
  id: va
  noise_suppression_level: 0
  auto_gain: 0dBFS
  volume_multiplier: 2.0
  use_wake_word: false
  #media_player: media_player_speaker
  
  on_error: 
   - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - switch.turn_off: use_wake_word
          - switch.turn_on: use_wake_word      

  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:

  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:

binary_sensor:
  - platform: status
    name: API Connection
    id: api_connection
    filters:
      - delayed_on: 1s
    on_press:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.start_continuous:
    on_release:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.stop:


switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
